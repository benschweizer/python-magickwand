#/bin/sh
#
# requires:
# - python-ctypeslib (apply included xml2py patch)
#   - gccxml
#   - gcc-c++
# - magickwand-devel
#

h2xml -I /usr/include/ImageMagick/ /usr/include/ImageMagick/wand/MagickWand.h /usr/include/ImageMagick/wand/*h -o magickwand3.xml -q -c
xml2py magickwand3.xml -l /usr/lib/libMagickWand.so.3 -k f -o magickwand3.py    # needs patched xml2py

# remove fixed paths from loader (edit first few lines of code).
#
# finally, strip global glibc symbols.
# todo: howto
#
# Notes on API generation by Ian Stevens, https://trac.assembla.com/pythonmagickwand/ticket/9:
#
# * h2xml.py generates XML for primitive C types. These definitions are contained
#   in ctypes and should be removed. If not, the resulting api.py will be twice
#   as big as necessary.
# * A few numeric constants generated by h2xml.py are appended with a 'u',
#   presumably for unsigned. These will have to be fixed as they cause xml2py.py
#   to exit with an error.
# * xml2py.py only outputs method names in the XML input which are also present
#   in the LD_LIBRARY_PATH or from a library passed as a parameter. This means
#   that an up-to-date library must be present, most likely compiled from the
#   most recent source.
# * If an api.py is generated from the latest library output, many methods
#   contained within it will not be present in older versions. As such, they may
#   cause an exception when api.py is parsed, regardless of whether the missing
#   method is actually used. 
#
#
# Notes by Oliver Berger:
#
# regexp performed on all definition from Ian Stevens (http://www.assembla.com/wiki/show/pythonmagickwand)          
# ^\w*\s=\_lib\.(\w*)$\n\w*\.restype\s=\s(.*)$\n\w*\.argtypes\s=\s(.*)$                                             
# ('$1', $2, $3),                                                                                                   
#
